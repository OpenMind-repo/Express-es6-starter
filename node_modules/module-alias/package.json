{
  "_args": [
    [
      {
        "raw": "module-alias@*",
        "scope": null,
        "escapedName": "module-alias",
        "name": "module-alias",
        "rawSpec": "*",
        "spec": "*",
        "type": "range"
      },
      "/home/gerald/code/node/newstructure"
    ]
  ],
  "_from": "module-alias@*",
  "_id": "module-alias@2.0.1",
  "_inCache": true,
  "_location": "/module-alias",
  "_nodeVersion": "8.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/module-alias-2.0.1.tgz_1501235442589_0.6193580608814955"
  },
  "_npmUser": {
    "name": "ilearnio",
    "email": "artnikpro@gmail.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "module-alias@*",
    "scope": null,
    "escapedName": "module-alias",
    "name": "module-alias",
    "rawSpec": "*",
    "spec": "*",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/module-alias/-/module-alias-2.0.1.tgz",
  "_shasum": "7562c0fe839f195ac809292624634ba7c453aecb",
  "_shrinkwrap": null,
  "_spec": "module-alias@*",
  "_where": "/home/gerald/code/node/newstructure",
  "author": {
    "name": "Nick Gavrilov",
    "email": "artnikpro@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/ilearnio/module-alias/issues"
  },
  "dependencies": {},
  "description": "Create aliases of directories and register custom module paths in NodeJS like a boss!",
  "devDependencies": {
    "chai": "^3.5.0",
    "hello-world-classic": "github:ilearnio/hello-world-classic",
    "mocha": "^2.4.5"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-4JTF+Ce5ZQDfl2+UU1xMh7kuUikh0zg8nprLID6bEybUvmnbXEjlZt6Caw8JVhPRI7TgFAx79wkRMMmMYGFIiw==",
    "shasum": "7562c0fe839f195ac809292624634ba7c453aecb",
    "tarball": "https://registry.npmjs.org/module-alias/-/module-alias-2.0.1.tgz"
  },
  "files": [
    "index.js",
    "register.js",
    "README.md"
  ],
  "gitHead": "4763785d63b99f99210cbdbd170fce2585a48ff7",
  "homepage": "https://github.com/ilearnio/module-alias",
  "keywords": [
    "extend",
    "modules",
    "node",
    "path",
    "resolve"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "ilearnio",
      "email": "artnikpro@gmail.com"
    }
  ],
  "name": "module-alias",
  "optionalDependencies": {},
  "readme": "# module-alias\n[![NPM Version][npm-image]][npm-url]\n[![Build Status][travis-image]][travis-url]\n\nCreate aliases of directories and register custom module paths in NodeJS like a boss!\n\nNo more shit-coding paths in Node like so:\n\n```js\nrequire('../../../../some/very/deep/module')\n```\nEnough of this madness!\n\nJust create an alias and do it the right way:\n\n```js\nvar module = require('@deep/module')\n// Or ES6\nimport module from '@deep/module'\n```\n\nIt also allows you to register directories that will act just like `node_modules` but with your own private modules, so that you can access them directly:\n\n```js\nrequire('my_private_module');\n// Or ES6\nimport module from 'my_private_module'\n```\n\n**WARNING:** This module should not be used in other npm modules since it modifies the default `require` behavior! It is designed to be used for development of final projects i.e. web-sites, applications etc.\n\n## Install\n\n```\nnpm i --save module-alias\n```\n\n## Usage\n\nAdd your custom configuration to your `package.json` (in your application's root)\n\n```js\n// Aliases\n\"_moduleAliases\": {\n  \"@root\"      : \".\", // Application's root\n  \"@deep\"      : \"src/some/very/deep/directory/or/file\",\n  \"@my_module\" : \"lib/some-file.js\",\n  \"something\"  : \"src/foo\", // Or without @. Actually, it could be any string\n}\n\n// Custom module directories, just like `node_modules` but with your private modules (optional)\n\"_moduleDirectories\": [\"node_modules_custom\"],\n```\n\nThen add this line at the very main file of your app, before any code\n\n```js\nrequire('module-alias/register')\n```\n\n**And you're all set!** Now you can do stuff like:\n\n```js\nrequire('something')\nconst module = require('@root/some-module')\nconst veryDeepModule = require('@deep/my-module')\nconst customModule = require('my_private_module') // module from `node_modules_custom` directory\n\n// Or ES6\nimport 'something'\nimport module from '@root/some-module'\nimport veryDeepModule from '@deep/my-module'\nimport customModule from 'my_private_module' // module from `node_modules_custom` directory\n```\n\n## Advanced usage\n\nIf you don't want to modify your `package.json` or you just prefer to set it all up programmatically, then the following methods are available for you:\n\n* `addAlias('alias', 'target_path')` - register a single alias\n* `addAliases({ 'alias': 'target_path', ... }) ` - register multiple aliases\n* `addPath(path)` - Register custom modules directory (like node_modules, but with your own modules)\n\n_Examples:_\n```js\nconst moduleAlias = require('module-alias')\n\n//\n// Register alias\n//\nmoduleAlias.addAlias('@client', __dirname + '/src/client')\n\n// Or multiple aliases\nmoduleAlias.addAliases({\n  '@root'  : __dirname,\n  '@client': __dirname + '/src/client',\n  ...\n})\n\n//\n// Register custom modules directory\n//\nmoduleAlias.addPath(__dirname + '/node_modules_custom')\nmoduleAlias.addPath(__dirname + '/src')\n\n//\n// Import settings from a specific package.json\n//\nmoduleAlias(__dirname + '/package.json')\n\n// Or let mudule-alias to figure where your package.json is\n// located. By default it will look in the same directory\n// where you have your node_modules (application's root)\nmoduleAlias()\n```\n\n## Usage with WebPack\n\nLuckily, WebPack has a built in support for aliases and custom modules directories so it's easy to make it work on the client side as well!\n\n```js\n// webpack.config.js\nconst npm_package = require('./package.json')\n\nmodule.exports = {\n  entry: { ... },\n  resolve: {\n    root: __dirname,\n    alias: npm_package._moduleAliases || {},\n    extensions: ['', '.js', '.jsx'],\n    modulesDirectories: npm_package._moduleDirectories || [] // eg: [\"node_modules\", \"node_modules_custom\", \"src\"]\n  }\n}\n```\n\n## How it works?\n\nIn order to register an alias it modifies the internal `Module._resolveFilename` method so that when you use `require` or `import` it first checks whether the given string starts with one of the registered aliases, if so, it replaces the alias in the string with the target path of the alias.\n\nIn order to register a custom modules path (`addPath`) it modifies the internal `Module._nodeModulePaths` method so that the given directory then acts like it's the `node_modules` directory.\n\n[npm-image]: https://img.shields.io/npm/v/module-alias.svg\n[npm-url]: https://npmjs.org/package/module-alias\n[travis-image]: https://img.shields.io/travis/ilearnio/module-alias/master.svg\n[travis-url]: https://travis-ci.org/ilearnio/module-alias\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ilearnio/module-alias.git"
  },
  "scripts": {
    "lint": "standard src",
    "test": "npm run lint && npm run testonly",
    "testonly": "NODE_ENV=test mocha test/specs.js",
    "testonly-watch": "NODE_ENV=test mocha -w test/specs.js"
  },
  "version": "2.0.1"
}
